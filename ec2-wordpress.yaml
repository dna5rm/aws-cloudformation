AWSTemplateFormatVersion: 2010-09-09
Description: 202001151330 - Launch an EC2 webserver running WordPress

#############################
# Parameters                #
#############################

Parameters:

  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.nano
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
    ConstraintDescription: must be a valid EC2 instance type.
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    Default: 'OPS'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  VpcId:
    Description: Target VPC for the instance
    Type: 'AWS::EC2::VPC::Id'
    ConstraintDescription: Must be the ID of an existing VPC
  SubnetId:
    Description: Target Subnet for the instance
    Type: 'AWS::EC2::Subnet::Id'
    ConstraintDescription: Must be the ID of an existing Subnet
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 192.0.2.0/24
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

  # Database Settings
  DBName:
    Default: wordpressdb
    Description: The WordPress database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBUser:
    Default: wordpressdb
    NoEcho: 'true'
    Description: The WordPress database admin account username
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBPassword:
    Default: Start1234
    NoEcho: 'true'
    Description: The WordPress database admin account password
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
  DBRootPassword:
    Default: Start1234
    NoEcho: 'true'
    Description: MySQL root password
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.

  # Monitoring Thresholds
  AlertEndpoint:
    Default: ops@example.com
    Description: Alerting Email
    Type: String
  CpuWarningAlarmThreshold:
    Description: The percentage of allocated EC2 compute units that are currently in use on the instance.
    Type: Number
    Default: 80
  CpuCriticalAlarmThreshold:
    Description: The percentage of allocated EC2 compute units that are currently in use on the instance.
    Type: Number
    Default: 90

#############################
# Metadata                  #
#############################

Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Instance Settings
        Parameters:
          - InstanceType
          - VpcId
          - SubnetId
          - KeyName
          - SSHLocation
      - Label:
          default: CPU Monitoring
        Parameters:
          - AlertEndpoint
          - CpuWarningAlarmThreshold
          - CpuCriticalAlarmThreshold
      - Label:
          default: WordPress Settings
        Parameters:
          - DBRootPassword
          - DBName
          - DBUser
          - DBPassword
    ParameterLabels:
      InstanceType:
        default: EC2 Instance Type
      KeyName:
        default: Management Key
      VpcId:
        default: VPC ID
      SubnetId:
        default: Server Subnet
      SSHLocation:
        default: Management CIDR
      DBName:
        default: DB Name
      DBUser:
        default: DB User
      DBPassword:
        default: DB Password
      DBRootPassword:
        default: DB root password
      AlertEndpoint:
        default: Alerting Email
      CpuWarningAlarmThreshold:
        default: Warning Threshold
      CpuCriticalAlarmThreshold:
        default: Critical Threshold

#############################
# Mappings                  #
#############################

Mappings:

  AWSRegionArch2AMI:
    eu-west-3:
      AMI: ami-007fae589fdf6e955

#############################
# Resources                 #
#############################

Resources:

  # Create the alert topic
  AppAlertTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub 'WAN-${AWS::StackName}-health'
  AppAlertSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !Ref AlertEndpoint
      Protocol: email
      TopicArn: !Sub ${AppAlertTopic}

  # Create EC2 Security Group
  WebServerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: >-
        Enable HTTP + SSH management access
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - { "IpProtocol": "icmp", "FromPort": "-1", "ToPort": "-1", "CidrIp": "10.0.0.0/8", "Description": "ICMP" }
        - { "IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": !Ref SSHLocation, "Description": "SSH" }
        - { "IpProtocol": "tcp", "FromPort": "80", "ToPort": "80", "CidrIp": "10.0.0.0/8", "Description": "HTTP" }
        - { "IpProtocol": "tcp", "FromPort": "443", "ToPort": "443", "CidrIp": "10.0.0.0/8", "Description": "HTTPS" }

  # Create EC2 Apache server
  WebServer:
    Type: 'AWS::EC2::Instance'
    Metadata:
      'AWS::CloudFormation::Init':
        configSets:
          wordpress_install:
            - install_cfn
            - prepare_php
            - install_wordpress
            - configure_wordpress
        install_cfn:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Join
                - ''
                - - |
                    [main]
                  - stack=
                  - !Ref 'AWS::StackId'
                  - |+

                  - region=
                  - !Ref 'AWS::Region'
                  - |+

              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Join
                - ''
                - - |
                    [cfn-auto-reloader-hook]
                  - |
                    triggers=post.update
                  - |
                    path=Resources.WebServer.Metadata.AWS::CloudFormation::Init
                  - 'action=/opt/aws/bin/cfn-init -v '
                  - ' --stack '
                  - !Ref 'AWS::StackName'
                  - ' --resource WebServer '
                  - ' --configsets wordpress_install '
                  - ' --region '
                  - !Ref 'AWS::Region'
                  - |+

              mode: '000400'
              owner: root
              group: root
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
        prepare_php:
          commands:
            php:
              command: amazon-linux-extras install -y php7.3
          packages:
            yum:
              httpd: []
              php: []
              php-mysqlnd: []
          services:
            sysvinit:
              httpd:
                enabled: 'true'
                ensureRunning: 'true'
        install_wordpress:
          packages:
            yum:
              mariadb: []
              mariadb-server: []
              mariadb-devel: []
              mariadb-libs: []
          sources:
            /var/www/html: 'http://wordpress.org/latest.tar.gz'
          files:
            /tmp/setup.mysql:
              content: !Join
                - ''
                - - 'CREATE DATABASE '
                  - !Ref DBName
                  - |
                    ;
                  - CREATE USER '
                  - !Ref DBUser
                  - '''@''localhost'' IDENTIFIED BY '''
                  - !Ref DBPassword
                  - |
                    ';
                  - 'GRANT ALL ON '
                  - !Ref DBName
                  - .* TO '
                  - !Ref DBUser
                  - |
                    '@'localhost';
                  - |
                    FLUSH PRIVILEGES;
              mode: '000400'
              owner: root
              group: root
            /tmp/create-wp-config:
              content: !Join
                - ''
                - - |
                    #!/bin/bash -xe
                  - >
                    cp /var/www/html/wordpress/wp-config-sample.php
                    /var/www/html/wordpress/wp-config.php
                  - sed -i "s/'database_name_here'/'
                  - !Ref DBName
                  - |
                    '/g" wp-config.php
                  - sed -i "s/'username_here'/'
                  - !Ref DBUser
                  - |
                    '/g" wp-config.php
                  - sed -i "s/'password_here'/'
                  - !Ref DBPassword
                  - |
                    '/g" wp-config.php
              mode: '000500'
              owner: root
              group: root
          services:
            sysvinit:
              mariadb:
                enabled: 'true'
                ensureRunning: 'true'
        configure_wordpress:
          commands:
            01_set_mysql_root_password:
              command: !Join
                - ''
                - - mysqladmin -u root password '
                  - !Ref DBRootPassword
                  - ''''
              test: !Join
                - ''
                - - '$(mysql '
                  - !Ref DBName
                  - ' -u root --password='''
                  - !Ref DBRootPassword
                  - ''' >/dev/null 2>&1 </dev/null); (( $? != 0 ))'
            02_create_database:
              command: !Join
                - ''
                - - mysql -u root --password='
                  - !Ref DBRootPassword
                  - ''' < /tmp/setup.mysql'
              test: !Join
                - ''
                - - '$(mysql '
                  - !Ref DBName
                  - ' -u root --password='''
                  - !Ref DBRootPassword
                  - ''' >/dev/null 2>&1 </dev/null); (( $? != 0 ))'
            03_configure_wordpress:
              command: /tmp/create-wp-config
              cwd: /var/www/html/wordpress
          files:
            /var/www/html/index.html:
              content: !Join
                - ''
                - - |
                    <!DOCTYPE html>
                    <html>
                      <head>
                        <meta http-equiv="Refresh" content="0; url=/wordpress" />
                      </head>
                      <body>
                        <p>Please follow <a href="/wordpress">this link</a>.</p>
                      </body>
                    </html>
                  - |+

              mode: '000644'
              owner: root
              group: root
    Properties:
      ImageId: !FindInMap [ AWSRegionArch2AMI, !Ref 'AWS::Region', AMI ]
      InstanceType: !Ref InstanceType
      NetworkInterfaces:
        - AssociatePublicIpAddress: 'false'
          DeviceIndex: '0'
          DeleteOnTermination: 'true'
          GroupSet:
            - !Ref WebServerSecurityGroup
          SubnetId: !Ref SubnetId
      KeyName: !Ref KeyName
      UserData: !Base64
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash -xe
            - |
              yum update -y aws-cfn-bootstrap
            - '/opt/aws/bin/cfn-init -v '
            - ' --stack '
            - !Ref 'AWS::StackName'
            - ' --resource WebServer '
            - ' --configsets wordpress_install '
            - ' --region '
            - !Ref 'AWS::Region'
            - |+

            - '/opt/aws/bin/cfn-signal -e $? '
            - ' --stack '
            - !Ref 'AWS::StackName'
            - ' --resource WebServer '
            - ' --region '
            - !Ref 'AWS::Region'
            - |+

      Tags:
        - Key: Application
          Value: !Sub 'ec2-${AWS::Region}-${AWS::StackId}'
        - Key: Name
          Value: !Sub '${AWS::StackName}'
        - Key: LOB
          Value: OPS
        - Key: appname
          Value: wordpress
        - Key: RunSchedule
          Value: running
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M

  # -------------------------------- #
  # Monitoring / CloudWatch Alarms   #
  # -------------------------------- #

  # Auto-recover if EC2 instance is in failed state
  EC2RecoveryAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: True
      AlarmActions:
        - !Join ['', ['arn:aws:automate:', !Ref 'AWS::Region', ':ec2:recover']]
        - !Ref AppAlertTopic
      AlarmName: !Sub alarm-${AWS::Region}-WAN-${AWS::StackName}-EC2-StatusCheckFailed
      AlarmDescription: Trigger a recovery when instance status check fails for 15 consecutive minutes.
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: InstanceId
          Value: !Ref WebServer
      EvaluationPeriods: 15
      MetricName: StatusCheckFailed_System
      Namespace: AWS/EC2
      Period: 60
      Statistic: Minimum
      Threshold: 0
  EC2CpuWarningAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: True
      AlarmActions: [ !Ref AppAlertTopic ]
      AlarmName: !Sub alarm-${AWS::Region}-WAN-${AWS::StackName}-EC2-HighCPU-Warning
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: InstanceId
          Value: !Ref WebServer
      EvaluationPeriods: 5
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Period: 60
      Statistic: Average
      Threshold: !Ref CpuWarningAlarmThreshold
  EC2CpuCriticalAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: True
      AlarmActions: [ !Ref AppAlertTopic ]
      AlarmName: !Sub alarm-${AWS::Region}-WAN-${AWS::StackName}-EC2-HighCPU-critical
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: InstanceId
          Value: !Ref WebServer
      EvaluationPeriods: 5
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Period: 60
      Statistic: Average
      Threshold: !Ref CpuCriticalAlarmThreshold

#############################
# Outputs                   #
#############################

Outputs:

  WebsiteURL:
    Description: WordPress Website
    Value: !Join
      - ''
      - - 'http://'
        - !GetAtt [ WebServer, PrivateIp ]
        - /wordpress
